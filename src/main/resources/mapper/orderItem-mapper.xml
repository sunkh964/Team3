<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="orderItemMapper">
    <resultMap id="orderItem" type="com.green.Team3.orderItem.vo.OrderItemVO">
        <id column="ORDER_NUM" property="orderNum"/>
        <result column="ORDER_DATE" property="orderDate"/>
        <result column="DEPART_TIME" property="departTime"/>
        <result column="ARRIVE_TIME" property="arriveTime"/>
        <result column="STOCK_ITEM_CNT" property="stockItemCnt"/>
        <result column="TOTAL_PRICE" property="totalPrice"/>
        <result column="DETAIL_NUM" property="detailNum"/>
        <association property="supVO" resultMap="supMapper.sup"/>
        <association property="itemTypeVO" resultMap="supMapper.itemType"/>
        <association property="itemVO" resultMap="supMapper.item"/>
        <association property="deliverVO" resultMap="deliver"/>
        <collection property="orderDetailVO" resultMap="orderDetail"/>
    </resultMap>

    <resultMap id="orderAmount" type="com.green.Team3.orderItem.vo.OrderAmountVO">
        <id column="TYPE_NAME" property="typeName"/>
        <result column="TOTAL_AMOUNT" property="totalAmount"/>
    </resultMap>

    <resultMap id="stockCount" type="com.green.Team3.orderItem.vo.StockCountVO">
        <id column="STOCK_ITEM_CNT" property="stockItemCnt"/>
        <result column="ITEM_NAME" property="itemName"/>
    </resultMap>

    <resultMap id="deliver" type="com.green.Team3.orderItem.vo.DeliverVO">
        <id column="DELI_NUM" property="deliNum"/>
        <result column="DELI_STATUS" property="deliStatus"/>
    </resultMap>

    <resultMap id="orderDetail" type="com.green.Team3.orderItem.vo.OrderDetailVO">
        <id column="DETAIL_NUM" property="detailNum"/>
        <result column="ORDER_CNT" property="orderCnt"/>
        <result column="ITEM_NUM" property="itemNum"/>
        <result column="DETAIL_PRICE" property="detailPrice"/>
        <result column="ORDER_NUM" property="orderNum"/>
        <result column="DEPART_TIME" property="departTime"/>
        <result column="ARRIVE_TIME" property="arriveTime"/>
        <association property="itemVO" resultMap="supMapper.item"/>
        <association property="deliverVO" resultMap="deliver"/>
    </resultMap>



    <!-- 특정 월과 연도의 구입 항목 가져오기 -->
    <select id="selectOrderItem" resultMap="orderItem">
        SELECT *
        FROM ORDER_ITEM O, DELIVER D, ITEM SP, SUP S, ITEM_TYPE T, ORDER_DETAIL OD
        WHERE OD.DELI_NUM = D.DELI_NUM
        AND OD.ITEM_NUM = SP.ITEM_NUM
        AND SP.SUP_NUM = S.SUP_NUM
        AND SP.TYPE_NUM = T.TYPE_NUM
        AND O.ORDER_NUM = OD.ORDER_NUM
        AND MONTH(O.ORDER_DATE) = #{currentMonth}
        AND YEAR(O.ORDER_DATE) = #{currentYear}
        AND CUS_NUM =1
        <if test='searchValue != null and !searchValue.equals("")'>
            AND ${searchType} LIKE CONCAT('%', #{searchValue}, '%')
        </if>
        ORDER BY O.ORDER_DATE DESC;
    </select>
    <!-- 상품 타입별 총 금액 -->
    <select id="totalOrderAmount" resultMap="orderAmount">
        SELECT T.TYPE_NAME, SUM(OD.ORDER_CNT * I.PRICE) AS TOTAL_AMOUNT
        FROM ORDER_ITEM O, ORDER_DETAIL OD, ITEM I, ITEM_TYPE T
        WHERE O.ORDER_NUM = OD.ORDER_NUM
        AND OD.ITEM_NUM = I.ITEM_NUM
        AND I.TYPE_NUM = T.TYPE_NUM
        AND MONTH(O.ORDER_DATE) = #{currentMonth}
        AND YEAR(O.ORDER_DATE) = #{currentYear}
        AND O.DELI_NUM !=5
        AND CUS_NUM = 1
        GROUP BY T.TYPE_NAME
        ORDER BY T.TYPE_NAME;
    </select>

    <!--주문 취소 된 상품 금액-->
    <select id="selectCancelOrderAmount">
        SELECT T.TYPE_NAME, SUM(OD.ORDER_CNT * I.PRICE) AS TOTAL_AMOUNT
        FROM ORDER_ITEM O, ORDER_DETAIL OD, ITEM I, ITEM_TYPE T
        WHERE O.ORDER_NUM = OD.ORDER_NUM
        AND OD.ITEM_NUM = I.ITEM_NUM
        AND I.TYPE_NUM = T.TYPE_NUM
        AND MONTH(O.ORDER_DATE) = #{currentMonth}
        AND YEAR(O.ORDER_DATE) = #{currentYear}
        AND O.DELI_NUM =5
        AND CUS_NUM = 1
        GROUP BY T.TYPE_NAME
        ORDER BY T.TYPE_NAME;
    </select>

    <!-- a > b    -> a &gt; b -->
    <!-- a >= b    -> a &gt;= b -->
    <!-- a < b    -> a &lt; b -->
    <!-- a <= b    -> a &lt;= b -->

    <!-- 수령확인 버튼 -->
    <update id="completedDeli">
        UPDATE ORDER_ITEM O, ORDER_DETAIL D
        SET D.DELI_NUM = 4,
        ARRIVE_TIME = NOW()
        WHERE DETAIL_NUM = #{detailNum}
        AND O.ORDER_NUM = D.ORDER_NUM;
    </update>

    <!--주문 취소 버튼-->
    <update id="cancelDeli">
        UPDATE ORDER_ITEM I, ORDER_DETAIL D
        SET D.DELI_NUM = 5, I.DELI_NUM = 5
        WHERE D.DETAIL_NUM = #{orderNum}
        AND I.ORDER_NUM = D.ORDER_NUM;
    </update>

    <!-- 재고 관리 -->
    <select id="selectStockItem" resultMap="orderItem">
        SELECT T.TYPE_NAME, I.ITEM_NAME, SUM(OD.ORDER_CNT) AS STOCK_ITEM_CNT, S.SUP_NAME
        FROM ORDER_ITEM O, ITEM I, SUP S, ITEM_TYPE T, ORDER_DETAIL OD, deliver D
        WHERE O.DELI_NUM = D.DELI_NUM
        AND D.DELI_NUM = 4
        AND OD.ITEM_NUM = I.ITEM_NUM
        AND I.SUP_NUM = S.SUP_NUM
        AND I.TYPE_NUM = T.TYPE_NUM
        AND O.ORDER_NUM = OD.ORDER_NUM
        AND O.CUS_NUM =1
        <if test='searchValue != null and !searchValue.equals("")'>
            AND ${searchType} LIKE CONCAT('%', #{searchValue}, '%')
        </if>
        GROUP BY T.TYPE_NAME, I.ITEM_NAME, S.SUP_NAME
        ORDER BY O.ORDER_DATE DESC;
    </select>

    <!--본원 재고량-->
    <select id="onlyStockCnt" parameterType="map" resultType="int">
        SELECT SUM(OD.ORDER_CNT) AS STOCK_ITEM_CNT
        FROM ORDER_ITEM O
        JOIN ORDER_DETAIL OD ON O.ORDER_NUM = OD.ORDER_NUM
        JOIN ITEM I ON OD.ITEM_NUM = I.ITEM_NUM
        WHERE I.SUP_NUM = #{supNum} AND I.ITEM_NUM = #{itemNum}
        GROUP BY I.ITEM_NUM;
    </select>


    <!--구매하기-->
    <insert id="goOrder" parameterType="com.green.Team3.orderItem.vo.OrderItemVO" useGeneratedKeys="true" keyProperty="orderNum">
        INSERT INTO ORDER_ITEM
        (TOTAL_PRICE, ORDER_DATE, CUS_NUM, DELI_NUM)
        VALUES
        (#{totalPrice}, NOW(), 1, 1);
    </insert>
    <insert id="goOrderDetail">
        INSERT INTO ORDER_DETAIL
        (ORDER_CNT, ITEM_NUM, DETAIL_PRICE, ORDER_NUM)
        VALUES
        (#{orderCnt}, #{itemNum}, #{detailPrice}, #{orderNum});
    </insert>




    
</mapper>
